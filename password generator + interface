from tkinter import *
from tkinter import messagebox
import random
#Need to insatll pyperclip
import pyperclip
import json

def generate_password():
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

    password_letters = [random.choice(letters) for _ in range(random.randint(8, 10))]

    password_symbols = [random.choice(symbols) for _ in range(random.randint(2, 4))]

    password_numbers = [random.choice(numbers) for _ in range(random.randint(2, 4))]

    password_list = password_letters + password_symbols + password_numbers

    random.shuffle(password_list)

    password = "".join(password_list)
    password_entry.insert(0, password)
    pyperclip.copy(password)

def save():
    website_entry_text = website_entry.get()
    email_entry_text = email_entry.get()
    password_entry_text = password_entry.get()
    new_data = {
        website_entry_text: {
            "email": email_entry_text,
            "password": password_entry_text,
        }
    }
    if len(website_entry_text) == 0 or len(password_entry_text) == 0:
        messagebox.showinfo(title="oops", message="Please don't leave any fields empty")
    else:
        if_ok = messagebox.askokcancel(title=website_entry_text, message=f"There are the details entered: \nEmail: {email_entry_text}"
                                                             f"\nPassword: {password_entry_text}\nIs it okay to save?")
        if if_ok:
            try:
                with open("data.json", "r") as data_file:
                    data = json.load(data_file)
            except FileNotFoundError:
                with open("data.json", "w") as data_file:
                    json.dump(new_data, data_file, indent=4)
            else:
                data.update(new_data)
                with open("data.json", "w") as data_file:
                    json.dump(data, data_file, indent=4)
            finally:
                website_entry.delete(0, END)
                password_entry.delete(0, END)

def find_password():
    try:
        with open("data.json", "r") as data_file:
            data = json.load(data_file)
            user_search = website_entry.get()
    except FileNotFoundError:
        messagebox.showinfo(title="Error", message="No data File Found")
    else:
        if user_search in data:
            email = data[user_search]["email"]
            password = data[user_search]["password"]
            messagebox.showinfo(title=user_search, message=f"Email: {email}\nPassword: {password}")
        else:
            messagebox.showinfo(title="Error", message=f"No details for {user_search} exist")

window = Tk()
window.title("Password Manager")
window.config(padx= 30, pady= 30)

canvas = Canvas(width=200, height=200)
logo_img = PhotoImage(file="logo.png")
canvas.create_image(100, 100, image=logo_img)
canvas.grid(column= 1, row = 0)

website_text = Label(text="Website:")
website_text.grid(column= 0, row=1)

email_text = Label(text="Email/username:")
email_text.grid(column= 0, row= 2)

password_text = Label(text="Password:")
password_text.grid(column= 0, row=3)

website_entry = Entry(width=16)
website_entry.grid(column= 1, row=1)
website_entry.focus()

email_entry = Entry(width=35)
email_entry.grid(column= 1, row=2, columnspan= 2)
email_entry.insert(0, "andy@gmail.com")

password_entry = Entry(width=16)
password_entry.grid(column= 1, row=3)

add_button = Button(text="Add", width=30, command=save)
add_button.grid(column= 1, row=4, columnspan= 2)

generate_password_button = Button(text="Generate Password", command=generate_password)
generate_password_button.grid(column=2, row= 3)

search_button = Button(text="Search", command=find_password)
search_button.grid(column= 2, row= 1)

window.mainloop()
